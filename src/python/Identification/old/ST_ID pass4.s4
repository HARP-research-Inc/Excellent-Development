
#subsystems: elements tagged are children of.
When subsystem called out of object ([subsys]), autoreturns children#

<task "solid_table_identification">
    ~identify tables made up of exclusively solid blocks, with one data block and up to four label blocks which fit at least one dimmension~
    -subsystems:
        <read_in_json>[sheets]
            ~read in json and parse into dictionaries~
            -properties:
                <blocks_output>
                <sheets>
        <convert_coords>
            ~convert columns from string to int~
            -properties:
                <read_in_json>[sheets]
                <sheets>
            <measure_dsbs_and_lsbs>
                ~record size of all data and label solid blocks and add to SBs dict~
                -properties:
                    <convert_coords>[sheets]
                    <sheets>
            <organize_sbs_by_size>
                ~reorganize data SBs by size to start with the smallest~
                -properties:
                    <measure_dsbs_and_lsbs>[sheets]
                    <sheets>
        <check_labels>
            ~check label block connections by data block~
            -properties:
                <organize_sbs_by_size>[sheets][*]# make avialable#
                    <data_SBs>
                    <labels_by_x_y>
            -subtasks:
                <check_x_coordinates_of_available_labels>
                    ~check coords of label SBs to find potential options~
                    -subtasks:
                        <x_generate_available_places>
                            ~generate coords of available starting and ending positions~
                            -properties:
                                <organize_sbs_by_size>[sheets][*]
                        <x_check_potentials_against_options>
                            ~check all potentials against options given, add right matches to right potential dict for block, add left matches to table pass 1 dict and remove from right potential~
                            -properties:
                                <x_generate_available_places>[st_annotated_sheets][*]
                        <x_fill_right_potentials>
                            ~add all nonremoved right_potentials STs~
                            -properties:
                                <x_check_potentials_against_options>[st_annotated_sheets]
                        <x_fill_free_blocks>
                            ~add all nonremoved free blocks to the free blocks~
                            -properties:
                                <x_fill_right_potentials>[st_annotated_sheets][*][horiz_data_SBs]
                                <x_fill_right_potentials>[st_annotated_sheets][*][horiz_labels_by_x_y]
                <check_y_coordinates_of_available_labels>
                    ~check coords of label SBs to find potential options~
                        <y_generate_available_places>
                            ~generate coords of available starting and ending positions~
                                <x_fill_free_blocks>[st_annotated_sheets][*][positioned_dbs]
                        <y_check_potentials_against_options>
                            ~check all potentials against options given, add bottom matches to bottom potential dict for block, add top matches to table pass 1 dict and remove from top potential~
                        <y_fill_bottom_potentials>
                            ~add all nonremoved bottom potential STs~
                        <y_fill_free_blocks>
                            ~add all nonremoved free blocks to the free blocks~
        <print_output>
            ~go through ST annotated sheet dicts and print for validation~
            -subtasks:
                <print_data_coords>
                    ~print the rows and columns of the data SB~
                <print_spots_occupied> 
                    ~print coords of label SBs within label_components~
        <write_json>
            ~write st_annotated_sheets dict to json~
    -properties:
        <json "blocks_output">
            -assembly:
                <sheet>
                    -properties:
                        <int "sheet_number">
                        <blocks>
                            -assembly:
                                <block_group>
                                    -assembly:
                                        <data_block>
                                            -properties:
                                                <int "start_row">
                                                <int "end_row">
                                                <char "start_column">
                                                <char "end_column">
                                                <cells>
                                                    -assembly:
                                                        <cell>
                                    -subtypes: 
                                        <LABEL>
                                        <DATA>
        <json "solid_tables_output">
            -assembly:
                <sheet>
                    -properties:
                        <int "sheet_number">
                        <free_blocks>
                            -assembly:
                                <block_group>
                                    -assembly:
                                        <data_block>
                                            -properties:
                                                <int "start_row">
                                                <int "end_row">
                                                <char "start_column">
                                                <char "end_column">
                                                <cells>
                                                    -assembly:
                                                        <cell>
                                    -subtypes: 
                                        <LABEL>
                                        <DATA>
                        <solid_tables>
                            -assembly:
                                <solid_table>
                                    -properties:
                                        <data_block "data_component">
                                        <label_components>
                                            -properties:
                                                <data_block "top_label_component">
                                                <data_block "left_label_component">
                                                <data_block "right_label_component">
                                                <data_block "bottom_label_component">
        {x_generate_available_places}<st_annotated_sheets>
            ~sheets with STs and free SBs~
                -properties:
                    -remove:
                        {y_fill_bottom_potentials}<bottom_potential_sts>
                    {x_generate_available_places}<sheet>
                        -properties:
                            -remove:
                                <bottom_potential_sts>
                            {fill_free_blocks}<free_blocks>
                                -properties:
                                    {fill_free_blocks}<list "free_data_SBs">
                                        ~data solid blocks~
                                        -assembly:
                                            {fill_free_blocks}<data_block>
                                    {fill_free_blocks}<list "free_label_SBs">
                                        ~label solid blocks~
                                        -assembly:
                                            {fill_free_blocks}<data_block>
                            {x_generate_available_places}<data_SBs>
                                {x_generate_available_places}<data_block "positioned_dbs">
                                    -properties:
                                        {x_generate_available_places}<start_pos_l0>
                                        {x_generate_available_places}<start_pos_l1>
                                        {x_generate_available_places}<start_pos_r0>
                                        {x_generate_available_places}<start_pos_r1>
                                        {y_generate_available_places}<start_pos_t0>
                                        {y_generate_available_places}<start_pos_t1>
                                        {y_generate_available_places}<start_pos_b0>
                                        {y_generate_available_places}<start_pos_b1>
                                -remove: 
                                    {x_generate_available_places}<data_block>
                            {x_check_potentials_against_options}<solid_tables>
                                -assembly:
                                    {x_check_potentials_against_options}<solid_table>
                            {y_check_potentials_against_options}<bottom_potential_sts>
                                -assembly:
                                    {y_check_potentials_against_options}<solid_table>
                            {check_potentials_against_options}<right_potential_sts>
                                -assembly:
                                    {check_potentials_against_options}<solid_table>
                                        -properties:
                                            {check_potentials_against_options}<data_block "data_component">
                                            {check_potentials_against_options}<label_components>
                                                -properties:
                                                    {check_potentials_against_options}<data_block "top_label_component">
                                                    {check_potentials_against_options}<data_block "left_label_component">
                                                    {check_potentials_against_options}<data_block "right_label_component">
                                                    {check_potentials_against_options}<data_block "bottom_label_component">
                            {x_check_potentials_against_options}<data_SBs "horiz_data_SBs">
                            {x_check_potentials_against_options}<data_SBs "horiz_labels_by_x_y">
                            -remove:
                                {x_fill_free_blocks}<data_SBs "horiz_data_SBs">
                                {x_fill_free_blocks}<data_SBs "horiz_labels_by_x_y">
                            {y_check_potentials_against_options}<data_SBs "vert_data_SBs">
                            {y_check_potentials_against_options}<data_SBs "vert_labels_by_x_y">
                            -remove:
                                {y_fill_free_blocks}<data_SBs "horiz_data_SBs">
                                {y_fill_free_blocks}<data_SBs "horiz_labels_by_x_y">
                            -remove:
                                {x_fill_right_potentials}<right_potential_sts>
        {read_in_json}<dict "sheets">
            -assembly:
                {read_in_json}<sheet>
                    -properties:
                        {measure_dsbs_and_lsbs}<list "data_SBs">
                            ~data solid blocks~
                            -assembly:
                                <data_block>
                                    -properties:
                                        {measure_dsbs_and_lsbs}<int "x_size">
                                        {measure_dsbs_and_lsbs}<int "y_size">
                    {organize_sbs_by_size}<labels_by_x_y>
                        ~a dictionary which contains the labels catagorized by size~
                        -properties:
                            {organize_sbs_by_size}<dict "x">
                                -keys:
                                    {organize_sbs_by_size}<int "size">
                                -dict_values:
                                    {organize_sbs_by_size}<list "label_SBs">
                            {organize_sbs_by_size}<dict "y">
                                -keys:
                                    {organize_sbs_by_size}<int "size">
                                -dict_values:
                                    {organize_sbs_by_size}<list "label_SBs">
                        {read_in_json}<int "sheet_number">
                        {read_in_json}<blocks>
                            -assembly:
                                {read_in_json}<block_group>
                                    -assembly:
                                        {read_in_json}<data_block>
                                            -properties:
                                                -remove:
                                                    {convert_coords}<start_column>
                                                    {convert_coords}<end_column>
                                                {convert_coords}<int "start_column">
                                                {convert_coords}<int "end_column">
                                                {read_in_json}<int "start_row">
                                                {read_in_json}<int "end_row">
                                                {read_in_json}<char "start_column">
                                                {read_in_json}<char "end_column">
                                                {read_in_json}<cells>
                                                {measure_dsbs_and_lsbs}<int "x_size">
                                                {measure_dsbs_and_lsbs}<int "y_size">
                                                    -assembly:
                                                        {read_in_json}<cell>
                                    -subtypes: 
                                        {read_in_json}<LABEL>
                                        {read_in_json}<DATA>
